{% doc %}
  @prompt
    Create a sticky navigation bar with clickable links that smoothly scroll to corresponding sections on the page. Include customizable menu items, styling options, and anchor link functionality.

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-sticky-nav-{{ ai_gen_id }} {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    background-color: {{ block.settings.background_color }};
    backdrop-filter: blur(10px);
    border-bottom: {{ block.settings.border_width }}px solid {{ block.settings.border_color }};
    transition: all 0.3s ease;
    padding: {{ block.settings.padding_vertical }}px 0;
  }

  .ai-sticky-nav-container-{{ ai_gen_id }} {
    max-width: {{ block.settings.container_width }}px;
    margin: 0 auto;
    padding:0 20px;
    display: flex;
    justify-content: {{ block.settings.alignment }};
    align-items: center;
  }

  .ai-sticky-nav-menu-{{ ai_gen_id }} {
    display: flex;
    gap: {{ block.settings.item_spacing }}px;
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .ai-sticky-nav-item-{{ ai_gen_id }} {
    position: relative;}

  .ai-sticky-nav-link-{{ ai_gen_id }} {
    display: block;
    padding: {{ block.settings.link_padding_vertical }}px {{ block.settings.link_padding_horizontal }}px;
    color: {{ block.settings.text_color }};
    text-decoration: none;
    font-size: {{ block.settings.font_size }}px;
    font-weight: {{ block.settings.font_weight }};
    text-transform: {{ block.settings.text_transform }};
    border-radius: {{ block.settings.link_border_radius }}px;
    transition: all 0.3s ease;
    cursor: pointer;
  }

  .ai-sticky-nav-link-{{ ai_gen_id }}:hover {
    color: {{ block.settings.text_hover_color }};
    background-color: {{ block.settings.link_hover_background }};
  }

  .ai-sticky-nav-link-{{ ai_gen_id }}.active {
    color: {{ block.settings.active_text_color }};
    background-color: {{ block.settings.active_background_color }};
  }

  .ai-sticky-nav-mobile-toggle-{{ ai_gen_id }} {
    display: none;
    background: none;
    border: none;
    color: {{ block.settings.text_color }};
    font-size: 24px;
    cursor: pointer;
    padding: 8px;
  }

  @media screen and (max-width: 768px) {
    .ai-sticky-nav-mobile-toggle-{{ ai_gen_id }} {
      display: block;
    }

    .ai-sticky-nav-menu-{{ ai_gen_id }} {
      position: absolute;
      top:100%;
      left: 0;
      right: 0;
      background-color: {{ block.settings.background_color }};
      flex-direction: column;
      gap: 0;
      border-top: 1px solid {{ block.settings.border_color }};
      transform: translateY(-100%);
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;padding: 10px 20px;
    }

    .ai-sticky-nav-menu-{{ ai_gen_id }}.open {
      transform: translateY(0);
      opacity: 1;
      visibility: visible;
    }

    .ai-sticky-nav-item-{{ ai_gen_id }} {
      width: 100%;}

    .ai-sticky-nav-link-{{ ai_gen_id }} {
      padding: 15px 0;
      border-bottom: 1px solid {{ block.settings.border_color }};
    }

    .ai-sticky-nav-link-{{ ai_gen_id }}:last-child {
      border-bottom: none;
    }
  }

  .ai-sticky-nav-scroll-indicator-{{ ai_gen_id }} {
    position: absolute;
    bottom: 0;
    left: 0;
    height: {{ block.settings.indicator_height }}px;
    background-color: {{ block.settings.indicator_color }};
    transition: all 0.3s ease;
    border-radius: {{ block.settings.indicator_height | divided_by: 2 }}px;
  }

  {% if block.settings.show_scroll_indicator == false %}
    .ai-sticky-nav-scroll-indicator-{{ ai_gen_id }} {
      display: none;
    }
  {% endif %}
{% endstyle %}

<sticky-navigation-{{ ai_gen_id }}
  class="ai-sticky-nav-{{ ai_gen_id }}"
  data-scroll-offset="{{ block.settings.scroll_offset }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-sticky-nav-container-{{ ai_gen_id }}">
    <button
      class="ai-sticky-nav-mobile-toggle-{{ ai_gen_id }}"
      aria-label="Toggle navigation menu"
      aria-expanded="false">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <line x1="3" y1="6" x2="21" y2="6"></line>
        <line x1="3" y1="12" x2="21" y2="12"></line>
        <line x1="3" y1="18" x2="21" y2="18"></line>
      </svg>
    </button>

    <nav role="navigation" aria-label="Sticky navigation">
      <ul class="ai-sticky-nav-menu-{{ ai_gen_id }}">
        {% for i in (1..8) %}
          {% liquid
            assign menu_text_key = 'menu_item_' | append: i | append: '_text'
            assign menu_anchor_key = 'menu_item_' | append: i | append: '_anchor'
            assign menu_text = block.settings[menu_text_key]
            assign menu_anchor = block.settings[menu_anchor_key]
          %}
          {% if menu_text != blank and menu_anchor != blank %}
            <li class="ai-sticky-nav-item-{{ ai_gen_id }}">
              <a
                href="#{{ menu_anchor }}"
                class="ai-sticky-nav-link-{{ ai_gen_id }}"
                data-anchor="{{ menu_anchor }}"
              >
                {{ menu_text }}
              </a>
            </li>
          {% endif %}
        {% endfor %}
        {% if block.settings.show_scroll_indicator %}
          <div class="ai-sticky-nav-scroll-indicator-{{ ai_gen_id }}"></div>
        {% endif %}
      </ul>
    </nav>
  </div>
</sticky-navigation-{{ ai_gen_id }}>

<script>
  (function() {
    class StickyNavigation{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.scrollOffset = parseInt(this.dataset.scrollOffset) || 100;
        this.links = [];
        this.sections = [];
        this.activeLink = null;
        this.mobileToggle = null;
        this.menu = null;
        this.indicator = null;
      }

      connectedCallback() {
        this.initializeElements();
        this.setupEventListeners();
        this.updateActiveLink();
        this.updateScrollIndicator();
      }

      initializeElements() {
        this.links = Array.from(this.querySelectorAll('.ai-sticky-nav-link-{{ ai_gen_id }}'));
        this.mobileToggle = this.querySelector('.ai-sticky-nav-mobile-toggle-{{ ai_gen_id }}');
        this.menu = this.querySelector('.ai-sticky-nav-menu-{{ ai_gen_id }}');
        this.indicator = this.querySelector('.ai-sticky-nav-scroll-indicator-{{ ai_gen_id }}');
        this.sections = this.links.map(link => {
          const anchor = link.dataset.anchor;
          returndocument.getElementById(anchor);
        }).filter(Boolean);
      }

      setupEventListeners() {
        this.links.forEach(link => {
          link.addEventListener('click', (e) => {
            e.preventDefault();
            this.scrollToSection(link.dataset.anchor);this.closeMobileMenu();
          });
        });

        if (this.mobileToggle) {
          this.mobileToggle.addEventListener('click', () => {
            this.toggleMobileMenu();
          });
        }

        window.addEventListener('scroll', () => {
          this.updateActiveLink();
          this.updateScrollIndicator();
        });

        window.addEventListener('resize', () => {
          this.updateScrollIndicator();
        });document.addEventListener('click', (e) => {
          if (!this.contains(e.target)) {
            this.closeMobileMenu();
          }
        });
      }

      scrollToSection(anchor) {
        const target = document.getElementById(anchor);
        if (!target) return;

        const targetPosition = target.offsetTop - this.scrollOffset;
        
        window.scrollTo({
          top: targetPosition,
          behavior: 'smooth'
        });
      }

      updateActiveLink() {
        const scrollPosition = window.scrollY + this.scrollOffset + 50;
        let activeSection = null;

        this.sections.forEach(section => {
          if (section && section.offsetTop <= scrollPosition) {
            activeSection = section;
          }
        });

        this.links.forEach(link => {
          link.classList.remove('active');
          if (activeSection && link.dataset.anchor === activeSection.id) {
            link.classList.add('active');
            this.activeLink = link;
          }
        });
      }

      updateScrollIndicator() {
        if (!this.indicator || !this.activeLink) return;

        const menuRect = this.menu.getBoundingClientRect();
        const linkRect = this.activeLink.getBoundingClientRect();
        
        const indicatorLeft = linkRect.left - menuRect.left;
        const indicatorWidth = linkRect.width;

        this.indicator.style.left = indicatorLeft + 'px';
        this.indicator.style.width = indicatorWidth + 'px';
      }

      toggleMobileMenu() {
        const isOpen = this.menu.classList.contains('open');
        
        if (isOpen) {
          this.closeMobileMenu();
        } else {
          this.openMobileMenu();
        }
      }

      openMobileMenu() {
        this.menu.classList.add('open');
        this.mobileToggle.setAttribute('aria-expanded', 'true');}

      closeMobileMenu() {
        this.menu.classList.remove('open');
        this.mobileToggle.setAttribute('aria-expanded', 'false');
      }
    }

    customElements.define('sticky-navigation-{{ ai_gen_id }}', StickyNavigation{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Sticky Navigation",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "alignment",
      "label": "Menu alignment",
      "options": [
        {
          "value": "flex-start",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "flex-end",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "container_width",
      "min": 800,
      "max": 1400,
      "step": 50,
      "unit": "px",
      "label": "Container width",
      "default": 1200
    },
    {
      "type": "range",
      "id": "padding_vertical",
      "min": 5,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Vertical padding",
      "default": 15
    },
    {
      "type": "range",
      "id": "item_spacing",
      "min": 10,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "Menu item spacing",
      "default": 20
    },
    {
      "type": "header",
      "content": "Styling"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "rgba(255, 255, 255, 0.95)"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Border color",
      "default": "#e0e0e0"
    },
    {
      "type": "range",
      "id": "border_width",
      "min": 0,
      "max": 5,
      "step": 1,
      "unit": "px",
      "label": "Border width",
      "default": 1
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "font_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 16
    },
    {
      "type": "select",
      "id": "font_weight",
      "label": "Font weight",
      "options": [
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semi Bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "500"
    },
    {
      "type": "select",
      "id": "text_transform",
      "label": "Text transform",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "uppercase",
          "label": "Uppercase"
        },
        {
          "value": "lowercase",
          "label": "Lowercase"
        },
        {
          "value": "capitalize",
          "label": "Capitalize"
        }
      ],
      "default": "none"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "text_hover_color",
      "label": "Text hover color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Link Styling"
    },
    {
      "type": "range",
      "id": "link_padding_vertical",
      "min": 5,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Link vertical padding",
      "default": 10
    },
    {
      "type": "range",
      "id": "link_padding_horizontal",
      "min": 10,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Link horizontal padding",
      "default": 16
    },
    {
      "type": "range",
      "id": "link_border_radius",
      "min": 0,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Link border radius",
      "default": 6
    },
    {
      "type": "color",
      "id": "link_hover_background",
      "label": "Link hover background",
      "default": "rgba(0, 0, 0, 0.05)"
    },
    {
      "type": "header",
      "content": "Active State"
    },
    {
      "type": "color",
      "id": "active_text_color",
      "label": "Active text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "active_background_color",
      "label": "Active background color",
      "default": "#000f9f"
    },
    {
      "type": "header",
      "content": "Scroll Indicator"
    },
    {
      "type": "checkbox",
      "id": "show_scroll_indicator",
      "label": "Show scroll indicator",
      "default": true
    },
    {
      "type": "color",
      "id": "indicator_color",
      "label": "Indicator color",
      "default": "#000f9f"
    },
    {
      "type": "range",
      "id": "indicator_height",
      "min": 2,
      "max": 8,
      "step": 1,
      "unit": "px",
      "label": "Indicator height",
      "default": 3
    },
    {
      "type": "header",
      "content": "Behavior"
    },
    {
      "type": "range",
      "id": "scroll_offset",
      "min": 50,
      "max": 200,
      "step": 10,
      "unit": "px",
      "label": "Scroll offset",
      "default": 100
    },
    {
      "type": "header",
      "content": "Menu Items"
    },
    {
      "type": "text",
      "id": "menu_item_1_text",
      "label": "Menu item 1 text",
      "default": "Home"
    },
    {
      "type": "text",
      "id": "menu_item_1_anchor",
      "label": "Menu item 1 anchor ID"
    },
    {
      "type": "text",
      "id": "menu_item_2_text",
      "label": "Menu item 2 text",
      "default": "About"
    },
    {
      "type": "text",
      "id": "menu_item_2_anchor",
      "label": "Menu item 2 anchor ID"
    },
    {
      "type": "text",
      "id": "menu_item_3_text",
      "label": "Menu item 3 text",
      "default": "Services"
    },
    {
      "type": "text",
      "id": "menu_item_3_anchor",
      "label": "Menu item 3 anchor ID"
    },
    {
      "type": "text",
      "id": "menu_item_4_text",
      "label": "Menu item 4 text",
      "default": "Contact"
    },
    {
      "type": "text",
      "id": "menu_item_4_anchor",
      "label": "Menu item 4 anchor ID"
    },
    {
      "type": "text",
      "id": "menu_item_5_text",
      "label": "Menu item 5 text"
    },
    {
      "type": "text",
      "id": "menu_item_5_anchor",
      "label": "Menu item 5 anchor ID"
    },
    {
      "type": "text",
      "id": "menu_item_6_text",
      "label": "Menu item 6 text"
    },
    {
      "type": "text",
      "id": "menu_item_6_anchor",
      "label": "Menu item 6 anchor ID"
    },
    {
      "type": "text",
      "id": "menu_item_7_text",
      "label": "Menu item 7 text"
    },
    {
      "type": "text",
      "id": "menu_item_7_anchor",
      "label": "Menu item 7 anchor ID"
    },
    {
      "type": "text",
      "id": "menu_item_8_text",
      "label": "Menu item 8 text"
    },
    {
      "type": "text",
      "id": "menu_item_8_anchor",
      "label": "Menu item 8 anchor ID"
    }
  ],
  "presets": [
    {
      "name": "Sticky Navigation"
    }
  ]
}
{% endschema %}