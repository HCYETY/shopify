{% doc %}
  @prompt
    Create a customizable section that displays three products in a row on desktop with full product images displayed. Each product should include a product image (fully displayed), header/title, product title, custom description field (editable text), price, compare-at price (crossed out), and an add to cart button. The section should have settings to adjust the section width, spacing, and other layout parameters. On mobile devices, the three products should display as a horizontal slider/carousel with swipe functionality while maintaining full image display. Include customization options for colors, fonts, and button styles.

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-product-showcase-{{ ai_gen_id }} {
    width: 100%;
    max-width: {{ block.settings.section_width }}px;
    margin: 0 auto;
    padding: {{ block.settings.section_padding }}px;
    background-color: {{ block.settings.background_color }};
  }

  .ai-product-showcase__header-{{ ai_gen_id }} {
    text-align: {{ block.settings.title_alignment }};
    margin-bottom: {{ block.settings.title_margin_bottom }}px;
  }

  .ai-product-showcase__title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_font_size }}px;
    color: {{ block.settings.title_color }};
    margin: 0;
    font-weight: {{ block.settings.title_font_weight }};
  }

  .ai-product-showcase__grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: {{ block.settings.product_spacing }}px;
  }

  .ai-product-showcase__product-{{ ai_gen_id }} {
    background-color: {{ block.settings.product_card_bg }};
    border-radius: {{ block.settings.card_border_radius }}px;
    padding: {{ block.settings.card_padding }}px;
    text-align: center;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
  }

  .ai-product-showcase__product-{{ ai_gen_id }}:hover {
    transform: translateY(-5px);
  }

  .ai-product-showcase__image-wrapper-{{ ai_gen_id }} {
    width: 100%;
    margin-bottom: {{ block.settings.image_margin_bottom }}px;border-radius: {{ block.settings.image_border_radius }}px;
    overflow: hidden;
  }

  .ai-product-showcase__image-{{ ai_gen_id }} {
    width: 100%;
    height: {{ block.settings.image_height }}px;
    object-fit: cover;
    display: block;
  }

  .ai-product-showcase__image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: {{ block.settings.image_height }}px;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .ai-product-showcase__image-placeholder-{{ ai_gen_id }} svg {
    width: 100%;
    height: 100%;
    max-width: 200px;
    max-height: 200px;
  }

  .ai-product-showcase__empty-state-{{ ai_gen_id }} {
    position: absolute;
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 12px;
    color: #999;
    text-align: center;
  }

  .ai-product-showcase__product-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.product_title_size }}px;
    color: {{ block.settings.product_title_color }};
    margin: 0 0 {{ block.settings.element_spacing }}px;
    font-weight: {{ block.settings.product_title_weight }};
  }

  .ai-product-showcase__custom-description-{{ ai_gen_id }} {
    font-size: {{ block.settings.description_font_size }}px;
    color: {{ block.settings.description_color }};
    margin-bottom: {{ block.settings.element_spacing }}px;
    line-height: 1.4;
  }

  .ai-product-showcase__price-wrapper-{{ ai_gen_id }} {
    margin-bottom: {{ block.settings.element_spacing }}px;
  }

  .ai-product-showcase__price-{{ ai_gen_id }} {
    font-size: {{ block.settings.price_font_size }}px;
    color: {{ block.settings.price_color }};
    font-weight: {{ block.settings.price_font_weight }};
    margin-right: 8px;
  }

  .ai-product-showcase__compare-price-{{ ai_gen_id }} {
    font-size: {{ block.settings.compare_price_size }}px;
    color: {{ block.settings.compare_price_color }};
    text-decoration: line-through;
  }

  .ai-product-showcase__button-{{ ai_gen_id }} {
    background-color: {{ block.settings.button_bg_color }};
    color: {{ block.settings.button_text_color }};
    border: {{ block.settings.button_border_width }}px solid {{ block.settings.button_border_color }};
    border-radius: {{ block.settings.button_border_radius }}px;
    padding: {{ block.settings.button_padding_y }}px {{ block.settings.button_padding_x }}px;
    font-size: {{ block.settings.button_font_size }}px;
    font-weight: {{ block.settings.button_font_weight }};
    cursor: pointer;
    transition: all 0.3s ease;
    text-decoration: none;
    display: inline-block;
    width: 100%;
  }

  .ai-product-showcase__button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_bg }};
    color: {{ block.settings.button_hover_text }};
    border-color: {{ block.settings.button_hover_border }};
  }

  .ai-product-showcase__carousel-{{ ai_gen_id }} {
    display: none;
    position: relative;
    overflow: hidden;
  }

  .ai-product-showcase__carousel-track-{{ ai_gen_id }} {
    display: flex;
    transition: transform 0.3s ease;
    gap: {{ block.settings.product_spacing }}px;
  }

  .ai-product-showcase__carousel-slide-{{ ai_gen_id }} {
    flex: 0 0 calc(100% - {{ block.settings.product_spacing }}px);
    max-width: calc(100% - {{ block.settings.product_spacing }}px);
  }

  .ai-product-showcase__carousel-nav-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 20px;
  }

  .ai-product-showcase__carousel-dot-{{ ai_gen_id }} {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: #ccc;
    border: none;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .ai-product-showcase__carousel-dot-{{ ai_gen_id }}.active {
    background-color: {{ block.settings.button_bg_color }};
  }

  @media screen and (max-width: 768px) {
    .ai-product-showcase__grid-{{ ai_gen_id }} {
      display: none;
    }

    .ai-product-showcase__carousel-{{ ai_gen_id }} {
      display: block;
    }

    .ai-product-showcase-{{ ai_gen_id }} {
      padding: {{ block.settings.section_padding | times: 0.7 }}px;
    }

    .ai-product-showcase__image-{{ ai_gen_id }},
    .ai-product-showcase__image-placeholder-{{ ai_gen_id }} {
      height: {{ block.settings.image_height | times: 0.8 }}px;
    }
  }
{% endstyle %}

<product-showcase-{{ ai_gen_id }}
  class="ai-product-showcase-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  {% if block.settings.section_title != blank %}
    <div class="ai-product-showcase__header-{{ ai_gen_id }}">
      <h2 class="ai-product-showcase__title-{{ ai_gen_id }}">{{ block.settings.section_title }}</h2>
    </div>
  {% endif %}

  <div class="ai-product-showcase__grid-{{ ai_gen_id }}">
    {% for i in (1..3) %}
      {% liquid
        assign product_key = 'product_' | append: i
        assign description_key = 'custom_description_' | append: i
        assign product = block.settings[product_key]
        assign custom_description = block.settings[description_key]
      %}

      <div class="ai-product-showcase__product-{{ ai_gen_id }}">
        <div class="ai-product-showcase__image-wrapper-{{ ai_gen_id }}">
          {% if product and product.featured_image %}
            <img
              src="{{ product.featured_image | image_url: width: 600 }}"
              alt="{{ product.featured_image.alt | escape }}"
              class="ai-product-showcase__image-{{ ai_gen_id }}"
              loading="lazy"
              width="600"
              height="{{ block.settings.image_height }}"
            >
          {% else %}
            <div class="ai-product-showcase__image-placeholder-{{ ai_gen_id }}">
              {{ 'product-apparel-1' | placeholder_svg_tag }}
              <div class="ai-product-showcase__empty-state-{{ ai_gen_id }}">
                Add product {{ i }}
              </div>
            </div>
          {% endif %}
        </div>

        {% if product %}
          <h3 class="ai-product-showcase__product-title-{{ ai_gen_id }}">{{ product.title }}</h3>

          {% if custom_description != blank %}
            <div class="ai-product-showcase__custom-description-{{ ai_gen_id }}">{{ custom_description }}</div>
          {% endif %}

          <div class="ai-product-showcase__price-wrapper-{{ ai_gen_id }}">
            <span class="ai-product-showcase__price-{{ ai_gen_id }}">{{ product.price | money }}</span>
            {% if product.compare_at_price > product.price %}
              <span class="ai-product-showcase__compare-price-{{ ai_gen_id }}">{{ product.compare_at_price | money }}</span>
            {% endif %}
          </div>

          {% form 'product', product %}
            <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
            <button
              type="submit"
              class="ai-product-showcase__button-{{ ai_gen_id }}"
              {% unless product.selected_or_first_available_variant.available %}disabled{% endunless %}
            >
              {% if product.selected_or_first_available_variant.available %}
                {{ block.settings.button_text }}
              {% else %}
                Sold out
              {% endif %}
            </button>
          {% endform %}
        {% else %}
          <h3 class="ai-product-showcase__product-title-{{ ai_gen_id }}">Product {{ i }}</h3>
          <div class="ai-product-showcase__custom-description-{{ ai_gen_id }}">Add a product to get started</div>
          <div class="ai-product-showcase__price-wrapper-{{ ai_gen_id }}">
            <span class="ai-product-showcase__price-{{ ai_gen_id }}">$0.00</span>
          </div>
          <button class="ai-product-showcase__button-{{ ai_gen_id }}" disabled>
            {{ block.settings.button_text }}
          </button>
        {% endif %}
      </div>
    {% endfor %}
  </div>

  <div class="ai-product-showcase__carousel-{{ ai_gen_id }}">
    <div class="ai-product-showcase__carousel-track-{{ ai_gen_id }}">
      {% for i in (1..3) %}
        {% liquid
          assign product_key = 'product_' | append: i
          assign description_key = 'custom_description_' | append: i
          assign product = block.settings[product_key]
          assign custom_description = block.settings[description_key]
        %}

        <div class="ai-product-showcase__carousel-slide-{{ ai_gen_id }}">
          <div class="ai-product-showcase__product-{{ ai_gen_id }}">
            <div class="ai-product-showcase__image-wrapper-{{ ai_gen_id }}">
              {% if product and product.featured_image %}
                <img
                  src="{{ product.featured_image | image_url: width: 600 }}"
                  alt="{{ product.featured_image.alt | escape }}"
                  class="ai-product-showcase__image-{{ ai_gen_id }}"
                  loading="lazy"
                  width="600"
                  height="{{ block.settings.image_height }}"
                >
              {% else %}
                <div class="ai-product-showcase__image-placeholder-{{ ai_gen_id }}">
                  {{ 'product-apparel-1' | placeholder_svg_tag }}
                  <div class="ai-product-showcase__empty-state-{{ ai_gen_id }}">
                    Add product {{ i }}
                  </div>
                </div>
              {% endif %}
            </div>

            {% if product %}
              <h3 class="ai-product-showcase__product-title-{{ ai_gen_id }}">{{ product.title }}</h3>

              {% if custom_description != blank %}
                <div class="ai-product-showcase__custom-description-{{ ai_gen_id }}">{{ custom_description }}</div>
              {% endif %}

              <div class="ai-product-showcase__price-wrapper-{{ ai_gen_id }}">
                <span class="ai-product-showcase__price-{{ ai_gen_id }}">{{ product.price | money }}</span>
                {% if product.compare_at_price > product.price %}
                  <span class="ai-product-showcase__compare-price-{{ ai_gen_id }}">{{ product.compare_at_price | money }}</span>
                {% endif %}
              </div>

              {% form 'product', product %}
                <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                <button
                  type="submit"
                  class="ai-product-showcase__button-{{ ai_gen_id }}"
                  {% unless product.selected_or_first_available_variant.available %}disabled{% endunless %}
                >
                  {% if product.selected_or_first_available_variant.available %}
                    {{ block.settings.button_text }}
                  {% else %}
                    Sold out
                  {% endif %}
                </button>
              {% endform %}
            {% else %}
              <h3 class="ai-product-showcase__product-title-{{ ai_gen_id }}">Product {{ i }}</h3>
              <div class="ai-product-showcase__custom-description-{{ ai_gen_id }}">Add a product to get started</div>
              <div class="ai-product-showcase__price-wrapper-{{ ai_gen_id }}">
                <span class="ai-product-showcase__price-{{ ai_gen_id }}">$0.00</span>
              </div>
              <button class="ai-product-showcase__button-{{ ai_gen_id }}" disabled>
                {{ block.settings.button_text }}
              </button>
            {% endif %}
          </div>
        </div>
      {% endfor %}
    </div>

    <div class="ai-product-showcase__carousel-nav-{{ ai_gen_id }}">
      {% for i in (1..3) %}<button
          class="ai-product-showcase__carousel-dot-{{ ai_gen_id }} {% if forloop.first %}active{% endif %}"
          data-slide="{{ forloop.index0 }}"
          aria-label="Go to slide {{ forloop.index }}"
        ></button>
      {% endfor %}
    </div>
  </div>
</product-showcase-{{ ai_gen_id }}>

<script>
  (function() {
    class ProductShowcase{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentSlide = 0;
        this.totalSlides = 3;
        this.startX = 0;
        this.currentX = 0;
        this.isDragging = false;
      }

      connectedCallback() {
        this.carousel = this.querySelector('.ai-product-showcase__carousel-{{ ai_gen_id }}');
        this.track = this.querySelector('.ai-product-showcase__carousel-track-{{ ai_gen_id }}');
        this.dots = this.querySelectorAll('.ai-product-showcase__carousel-dot-{{ ai_gen_id }}');

        if (this.carousel && this.track) {
          this.setupEventListeners();
        }
      }

      setupEventListeners() {
        this.dots.forEach((dot, index) => {
          dot.addEventListener('click', () => this.goToSlide(index));
        });

        this.track.addEventListener('touchstart', (e) => this.handleTouchStart(e), { passive: true });
        this.track.addEventListener('touchmove', (e) => this.handleTouchMove(e), { passive: true });
        this.track.addEventListener('touchend', () => this.handleTouchEnd(), { passive: true });

        this.track.addEventListener('mousedown', (e) => this.handleMouseDown(e));
        this.track.addEventListener('mousemove', (e) => this.handleMouseMove(e));
        this.track.addEventListener('mouseup', () => this.handleMouseUp());
        this.track.addEventListener('mouseleave', () => this.handleMouseUp());
      }

      handleTouchStart(e) {
        this.startX = e.touches[0].clientX;
        this.isDragging = true;
      }

      handleTouchMove(e) {
        if (!this.isDragging) return;
        this.currentX = e.touches[0].clientX;
      }

      handleTouchEnd() {
        if (!this.isDragging) return;
        this.isDragging = false;

        const diffX = this.startX - this.currentX;
        const threshold = 50;

        if (Math.abs(diffX) > threshold) {
          if (diffX > 0 && this.currentSlide < this.totalSlides - 1) {
            this.goToSlide(this.currentSlide + 1);
          } else if (diffX < 0 && this.currentSlide > 0) {
            this.goToSlide(this.currentSlide - 1);
          }
        }
      }

      handleMouseDown(e) {
        e.preventDefault();
        this.startX = e.clientX;
        this.isDragging = true;
        this.track.style.cursor = 'grabbing';
      }

      handleMouseMove(e) {
        if (!this.isDragging) return;
        e.preventDefault();
        this.currentX = e.clientX;
      }

      handleMouseUp() {
        if (!this.isDragging) return;
        this.isDragging = false;
        this.track.style.cursor = 'grab';

        const diffX = this.startX - this.currentX;
        const threshold = 50;

        if (Math.abs(diffX) > threshold) {
          if (diffX > 0 && this.currentSlide < this.totalSlides - 1) {
            this.goToSlide(this.currentSlide + 1);
          } else if (diffX < 0 && this.currentSlide > 0) {
            this.goToSlide(this.currentSlide - 1);
          }
        }
      }

      goToSlide(slideIndex) {
        this.currentSlide = slideIndex;
        const translateX = -slideIndex * 100;
        this.track.style.transform = `translateX(${translateX}%)`;

        this.dots.forEach((dot, index) => {
          dot.classList.toggle('active', index === slideIndex);
        });
      }
    }

    customElements.define('product-showcase-{{ ai_gen_id }}', ProductShowcase{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Product showcase",
  "settings": [
    {
      "type": "header",
      "content": "Section"
    },
    {
      "type": "text",
      "id": "section_title",
      "label": "Section title",
      "default": "Featured Products"
    },
    {
      "type": "range",
      "id": "section_width",
      "min": 800,
      "max": 1400,
      "step": 50,
      "unit": "px",
      "label": "Section width",
      "default": 1200
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 0,
      "max": 80,
      "step": 5,
      "unit": "px",
      "label": "Section padding",
      "default": 40
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Title"
    },
    {
      "type": "select",
      "id": "title_alignment",
      "label": "Title alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "title_font_size",
      "min": 16,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Title font size",
      "default": 32
    },
    {
      "type": "select",
      "id": "title_font_weight",
      "label": "Title font weight",
      "options": [
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "600",
          "label": "Semi bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "700"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "title_margin_bottom",
      "min": 0,
      "max": 60,
      "step": 5,
      "unit": "px",
      "label": "Title bottom margin",
      "default": 30
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "product_spacing",
      "min": 10,
      "max": 60,
      "step": 5,
      "unit": "px",
      "label": "Product spacing",
      "default": 30
    },
    {
      "type": "range",
      "id": "element_spacing",
      "min": 5,
      "max": 30,
      "step": 5,
      "unit": "px",
      "label": "Element spacing",
      "default": 15
    },
    {
      "type": "header",
      "content": "Product cards"
    },
    {
      "type": "color",
      "id": "product_card_bg",
      "label": "Card background",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Card border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "card_padding",
      "min": 10,
      "max": 40,
      "step": 5,
      "unit": "px",
      "label": "Card padding",
      "default": 20
    },
    {
      "type": "header",
      "content": "Images"
    },
    {
      "type": "range",
      "id": "image_height",
      "min": 200,
      "max": 400,
      "step": 20,
      "unit": "px",
      "label": "Image height",
      "default": 300
    },
    {
      "type": "range",
      "id": "image_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Image border radius",
      "default": 4
    },
    {
      "type": "range",
      "id": "image_margin_bottom",
      "min": 5,
      "max": 30,
      "step": 5,
      "unit": "px",
      "label": "Image bottom margin",
      "default": 15
    },
    {
      "type": "header",
      "content": "Product titles"
    },
    {
      "type": "range",
      "id": "product_title_size",
      "min": 14,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Product title size",
      "default": 18
    },
    {
      "type": "select",
      "id": "product_title_weight",
      "label": "Product title weight",
      "options": [
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "600",
          "label": "Semi bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "600"
    },
    {
      "type": "color",
      "id": "product_title_color",
      "label": "Product title color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Descriptions"
    },
    {
      "type": "range",
      "id": "description_font_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Description font size",
      "default": 14
    },
    {
      "type": "color",
      "id": "description_color",
      "label": "Description color",
      "default": "#666666"
    },
    {
      "type": "header",
      "content": "Prices"
    },
    {
      "type": "range",
      "id": "price_font_size",
      "min": 14,
      "max": 22,
      "step": 2,
      "unit": "px",
      "label": "Price font size",
      "default": 18
    },
    {
      "type": "select",
      "id": "price_font_weight",
      "label": "Price font weight",
      "options": [
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "600",
          "label": "Semi bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "700"
    },
    {
      "type": "color",
      "id": "price_color",
      "label": "Price color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "compare_price_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Compare price size",
      "default": 14
    },
    {
      "type": "color",
      "id": "compare_price_color",
      "label": "Compare price color",
      "default": "#999999"
    },
    {
      "type": "header",
      "content": "Buttons"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button text",
      "default": "Add to Cart"
    },
    {
      "type": "color",
      "id": "button_bg_color",
      "label": "Button background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_bg",
      "label": "Button hover background",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "button_hover_text",
      "label": "Button hover text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_border_color",
      "label": "Button border color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_hover_border",
      "label": "Button hover border",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "button_border_width",
      "min": 0,
      "max": 4,
      "step": 1,
      "unit": "px",
      "label": "Button border width",
      "default": 1
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Button border radius",
      "default": 4
    },
    {
      "type": "range",
      "id": "button_font_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Button font size",
      "default": 14
    },
    {
      "type": "select",
      "id": "button_font_weight",
      "label": "Button font weight",
      "options": [
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "600",
          "label": "Semi bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "600"
    },
    {
      "type": "range",
      "id": "button_padding_y",
      "min": 8,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Button vertical padding",
      "default": 12
    },
    {
      "type": "range",
      "id": "button_padding_x",
      "min": 16,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Button horizontal padding",
      "default": 24
    },
    {
      "type": "header",
      "content": "Products"
    },
    {
      "type": "product",
      "id": "product_1",
      "label": "Product 1"
    },
    {
      "type": "textarea",
      "id": "custom_description_1",
      "label": "Custom description 1"
    },
    {
      "type": "product",
      "id": "product_2",
      "label": "Product 2"
    },
    {
      "type": "textarea",
      "id": "custom_description_2",
      "label": "Custom description 2"
    },
    {
      "type": "product",
      "id": "product_3",
      "label": "Product 3"
    },
    {
      "type": "textarea",
      "id": "custom_description_3",
      "label": "Custom description 3"
    }
  ],
  "presets": [
    {
      "name": "Product showcase"
    }
  ]
}
{% endschema %}